<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="cf92dcb2-36ef-41a4-b225-2156c9e08fe9" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app.go" beforeDir="false" afterPath="$PROJECT_DIR$/app.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/main_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/response.go" beforeDir="false" afterPath="$PROJECT_DIR$/response.go" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="C:\Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1PiPDGJr1EUf06Ess9o5f3akrNS" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Test.TestGetNonExistentProduct in github.com/nodias/golang-example-REST-tdd (1)">
    <configuration name="TestGetNonExistentProduct in github.com/nodias/golang-example-REST-tdd (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang-example-REST-tdd" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/nodias/golang-example-REST-tdd" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestGetNonExistentProduct$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetNonExistentProduct in github.com/nodias/golang-example-REST-tdd" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang-example-REST-tdd" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/nodias/golang-example-REST-tdd" />
      <pattern value="^TestGetNonExistentProduct$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetProduct in github.com/nodias/golang-example-REST-tdd" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang-example-REST-tdd" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/nodias/golang-example-REST-tdd" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestGetProduct$" />
      <method v="2" />
    </configuration>
    <configuration name="go test github.com/nodias/golang-example-REST-tdd (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang-example-REST-tdd" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/nodias/golang-example-REST-tdd" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go test github.com/nodias/golang-example-REST-tdd" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang-example-REST-tdd" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/nodias/golang-example-REST-tdd" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestGetNonExistentProduct in github.com/nodias/golang-example-REST-tdd (1)" />
        <item itemvalue="Go Test.TestGetProduct in github.com/nodias/golang-example-REST-tdd" />
        <item itemvalue="Go Test.go test github.com/nodias/golang-example-REST-tdd" />
        <item itemvalue="Go Test.go test github.com/nodias/golang-example-REST-tdd (1)" />
        <item itemvalue="Go Test.TestGetNonExistentProduct in github.com/nodias/golang-example-REST-tdd" />
      </list>
    </recent_temporary>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
    <proxy>direct</proxy>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/app.go</url>
          <line>40</line>
          <option name="timeStamp" value="60" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/app.go</url>
          <line>46</line>
          <option name="timeStamp" value="62" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/main_test.go</url>
          <line>143</line>
          <option name="timeStamp" value="76" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/main_test.go</url>
          <line>73</line>
          <option name="timeStamp" value="77" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/main_test.go</url>
          <line>74</line>
          <option name="timeStamp" value="78" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/main_test.go</url>
          <line>75</line>
          <option name="timeStamp" value="79" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/app.go</url>
          <line>56</line>
          <option name="timeStamp" value="80" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/app.go</url>
          <line>58</line>
          <option name="timeStamp" value="81" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/app.go</url>
          <line>70</line>
          <option name="timeStamp" value="82" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/app.go</url>
          <line>67</line>
          <option name="timeStamp" value="84" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/app.go</url>
          <line>74</line>
          <option name="timeStamp" value="86" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="GoTestRunConfiguration">
        <watch expression="*(*&quot;net/http/httptest.ResponseRecorder&quot;)(824633934272)" />
      </configuration>
    </watches-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/golang_example_REST_tdd$go_test_github_com_nodias_golang_example_REST_tdd.out" NAME="go test github.com/nodias/golang-example-REST-tdd Coverage Results" MODIFIED="1566461911868" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>